/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} val
 * @return {ListNode}
 */
var removeElements = function(head, val) {
    if (!head) return head;    
    let node = head;
    let previous;
    while(node) {
        if(node.val === val) {
        if(!previous) {
            head = head.next;
        } else {
            previous.next = node.next;
        }
    } else {
        previous = node;
    }
    node = node.next
    }
    return head

};