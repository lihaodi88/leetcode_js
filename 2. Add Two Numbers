/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2) {
    let head = new ListNode(0);
    let res = head;
    let carry = 0;
    
    while(l1 && l2) {
        let sum = l1.val + l2.val + carry;
        carry = sum >= 10 ? 1 : 0;
        head.next = new ListNode(sum%10);
        head = head.next;
        l1 = l1.next;
        l2 = l2.next;
    }
    let l = l1 ? l1 : l2;
    
    while(l) {
        let sum = l.val + carry;
        carry = sum >= 10 ? 1 : 0;
        head.next = new ListNode(sum%10);
        head = head.next
        l = l.next;
    }
    if(carry > 0) {
     head.next = new ListNode(1);

    }
    
    return res.next;
};